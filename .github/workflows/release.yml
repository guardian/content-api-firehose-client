name: Release Sonatype

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      isSnapshot:
        description: Produce a snapshot release
        required: true
        default: true
        type: boolean

env:
  isSnapshot: ${{ github.event.release.prerelease || (inputs.isSnapshot == 'true') }}

jobs:
  is_a_snapshot:
    if: ${{ env.isSnapshot }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "this is a snapshot"
  is_not_a_snapshot:
    if: ${{ !env.isSnapshot }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "this is NOT a snapshot = PROD"
  # release_snapshot_sonatype:
  #   if: 
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         base: main  #see https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#pull-request-events
  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: corretto
  #         java-version: 11
  #         cache: sbt
  #     - name: Release Snapshot (prerelease) to Sonatype
  #       run: |
  #         VERSION=$(git describe --tags | cut -f2 -d"@")
  #         if [[ ${VERSION:0:1} == "v" ]] ; then
  #           VERSION=${VERSION:1}
  #         fi
  #         if [[ ${VERSION: -9} != "-SNAPSHOT" ]] ; then
  #           echo "Version must end in -SNAPSHOT. Adding -SNAPSHOT suffix"
  #           VERSION="$VERSION-SNAPSHOT"
  #         fi
  #         echo $PGP_SECRET | base64 --decode | gpg --batch --import
  #         export GPG_TTY=$(tty)
  #         echo "Releasing version $VERSION Sonatype as snapshot"
  #         yes | sbt -DRELEASE_TYPE=snapshot "clean" "release cross release-version $VERSION with-defaults"
  #       env:
  #         PGP_SECRET: ${{ secrets.PGP_SECRET }}
  #         PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  #         SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  #         SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

  # release_production_sonatype:
  #   if: "! github.event.release.prerelease"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         base: main  #see https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#pull-request-events
  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: corretto
  #         java-version: 11
  #         cache: sbt
  #     - name: Release Production to Sonatype
  #       run: |
  #         VERSION=$(git describe --tags | cut -f2 -d"@")
  #         if [[ ${VERSION:0:1} == "v" ]] ; then
  #           VERSION=${VERSION:1}
  #         fi
  #         if [[ ${VERSION: -9} == "-SNAPSHOT" ]] ; then
  #           echo "Version must NOT end in -SNAPSHOT."
  #           exit 1
  #         fi
  #         echo $PGP_SECRET | base64 --decode | gpg --batch --import
  #         export GPG_TTY=$(tty)
  #         echo "Releasing version $VERSION Sonatype as production"
  #         yes | sbt -DRELEASE_TYPE=production "clean" "release cross release-version $VERSION with-defaults"
  #       env:
  #         PGP_SECRET: ${{ secrets.PGP_SECRET }}
  #         PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  #         SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  #         SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
